<?php

require 'Slim/Slim.php';
$app = new Slim();

$app->get('/users', 'getUsers');
$app->get('/users/:id',	'getUsersID');

$app->get('/username/:apikey',	'getUsername');

$app->get('/users/byusername/:username', 'getUsersByUsername');
$app->get('/users/search/:query', 'findByName');
$app->post('/users', 'addUser');

$app->get('/inbox/lastten/:id', 'getLastTen');

$app->get('/workorders', 'getWorkorders');
$app->get('/workorders/:id', 'getWorkordersID');
$app->get('/workorders/search/:query', 'findByTitle');
$app->get('/workorders/myworkorders/:user', 'findByUser');
$app->get('/workorders/myworkorders/:id/:event', 'findEventsByID');
$app->post('/workorders', 'addWorkorders');


$app->post('/events/:id', 'addEvent');

$app->get('/tools/geotophy/:geo', 'geoToPhy');
$app->get('/tools/phytogeo/:phy', 'phyToGeo');
$app->get('/tools/timeconvert/:time', 'timeConvert');

$app->post('/payments', 'submitPayment');

$app->run();

function getUsername($apikey) {
	$sql = "select * FROM users WHERE `apikey` = '" .$apikey. "' LIMIT 1";
	try {
		$db = getConnection();
		$stmt = $db->query($sql);  
		$users = $stmt->fetchAll(PDO::FETCH_OBJ);
		$db = null;
		echo var_dump($users);
		echo '{"messages": ' . json_encode($users) . '}';
	} catch(PDOException $e) {
		echo '{"error":{"text":'. $e->getMessage() .'}}'; 
	}
} 

function getLastTen($id) {
	$sql = "select * FROM inbox WHERE `to` = '" .$id. "' LIMIT 10";
	try {
		$db = getConnection();
		$stmt = $db->query($sql);  
		$users = $stmt->fetchAll(PDO::FETCH_OBJ);
		$db = null;
		echo var_dump($users);
		echo '{"messages": ' . json_encode($users) . '}';
	} catch(PDOException $e) {
		echo '{"error":{"text":'. $e->getMessage() .'}}'; 
	}
} 

function getUsers() {
	$sql = "select * FROM users ORDER BY username";
	try {
		$db = getConnection();
		$stmt = $db->query($sql);  
		$users = $stmt->fetchAll(PDO::FETCH_OBJ);
		$db = null;
		echo '{"users": ' . json_encode($users) . '}';
	} catch(PDOException $e) {
		echo '{"error":{"text":'. $e->getMessage() .'}}'; 
	}
}



function phyToGeo($phy) {
	$address = str_replace(" ", "+", $phy);
	$url = "http://maps.google.com/maps/api/geocode/json?sensor=false&address=$address";
	$response = file_get_contents($url);
	$json = json_decode($response, TRUE);
	echo ($json['results'][0]['geometry']['location']['lat'] . "," . $json['results'][0]['geometry']['location']['lng']);
	}

function timeConvert($time) {
	echo gmdate("m-d-Y H:i:s", $time);
	}

function geoToPhy() {
	$phy = "123 Fake St.";
		echo $phy;
	}

function getWorkorders() {
	$sql = "SHOW TABLES LIKE 'X%'";
	try {
		$db = getConnection();
		$stmt = $db->query($sql);  
		$orders = $stmt->fetchAll(PDO::FETCH_OBJ);
		$db = null;
		echo '{"workorders": ' . json_encode($orders) . '}';
	} catch(PDOException $e) {
		echo '{"error":{"text":'. $e->getMessage() .'}}'; 
	}
}

function getUsersID($id) {
	$sql = "SELECT * FROM users WHERE id=" . $id;
	try {
		$db = getConnection();
		$stmt = $db->prepare($sql);  
		$stmt->execute();
		$users = $stmt->fetchObject();  
		$db = null;
		echo json_encode($users); 
	} catch(PDOException $e) {
		echo '{"error":{"text":'. $e->getMessage() .'}}'; 
	}}

function getUsersByUsername($username) {
	$sql = "SELECT * FROM users";
	try {
		$db = getConnection();
		$stmt = $db->prepare($sql); 
		$stmt->execute();
		$users = $stmt->fetchObject();  
		$db = null;
		echo json_encode($users); 
	} catch(PDOException $e) {
		echo '{"error":{"text":'. $e->getMessage() .'}}'; 
	}}


function getWorkordersID($id) {
	$sql = "SELECT * FROM X" . $id;
	try {
		$db = getConnection();
		$stmt = $db->prepare($sql); 
		$stmt->execute();
		$workorders = $stmt->fetchObject();  
		$db = null;
		echo json_encode($workorders); 
	} catch(PDOException $e) {
		echo '{"error":{"text":'. $e->getMessage() .'}}'; 
	}
}

function addUser() {
	error_log('addUser\n', 3, 'addusererror.log');
	$request = Slim::getInstance()->request();
	$userdata = json_decode($request->getBody());
		$sql = "INSERT INTO users (type, username, fullname, mobile, email, company, password, salt, timezone, employees, usedemployees) VALUES (:type, :username, :fullname, :mobile, :email, :company, :password, :salt, :timezone, :employees, :usedemployees)";
	try {
		$db = getConnection();
		$stmt = $db->prepare($sql);
		$stmt->bindParam("type", $userdata->type);
		$stmt->bindParam("username", $userdata->username);
		$stmt->bindParam("fullname", $userdata->fullname);
		$stmt->bindParam("mobile", $userdata->mobile);
		$stmt->bindParam("email", $userdata->email);
		$stmt->bindParam("company", $userdata->company);
        $stmt->bindParam("password", $userdata->password);
        $stmt->bindParam("salt", $userdata->salt);
        $stmt->bindParam("timezone", $userdata->timezone);
        $stmt->bindParam("employees", $userdata->employees);
        $stmt->bindParam("usedemployees", $userdata->usedemployees);
		$stmt->execute();
		$db = null;
		echo json_encode("Success"); 
	} catch(PDOException $e) {
		error_log($e->getMessage(), 3, 'addusererror.log');
		echo '{"error":{"text":'. $e->getMessage() .'}}'; 
	}
}


function addWorkOrders() {
	error_log('addWorkOrders\n', 3, 'workorderserrors.log');
	$request = Slim::getInstance()->request();
	$userdata = json_decode($request->getBody());
	$sql = 
	"CREATE TABLE " . $userdata->ordernumber . " 
	(event INT NOT NULL AUTO_INCREMENT PRIMARY KEY, 
	eventtype VARCHAR(40) NOT NULL, 
	eventdata VARCHAR(40) NOT NULL,
	user VARCHAR(40) NOT NULL, 
	timestamp VARCHAR(40) NOT NULL);
	
	INSERT INTO " . $userdata->ordernumber . " 
	(eventtype, eventdata, user, timestamp) 
	VALUES 
	(:eventtype, :eventdata, :user, :timestamp);";
	try {
		$db = getConnection();
		$stmt = $db->prepare($sql);
		$type = "creation";
		$data = "initial";
		$timestamp = time();
		$stmt->bindParam("eventtype", $type);
		$stmt->bindParam("eventdata", $data);
		$stmt->bindParam("user", $userdata->user);
		$stmt->bindParam("timestamp", $timestamp);
		$stmt->execute();
		$db = null;
		echo json_encode($userdata); 
	} catch(PDOException $e) {
		error_log($e->getMessage(), 3, 'workorderserrors.log');
		echo '{"error":{"text":'. $e->getMessage() .'}}'; 
	}
}

function addEvent($id) {
	error_log('addEvent\n', 3, 'addeventlog.log');
	$request = Slim::getInstance()->request();
	$userdata = json_decode($request->getBody());
	$sql = "INSERT INTO " . $id . " (eventtype, eventdata, user, timestamp) VALUES (:eventtype, :eventdata, :user, :timestamp)";
	$timestamp = time();
	try {
		$db = getConnection();
		$stmt = $db->prepare($sql);
		$stmt->bindParam("eventtype", $userdata->eventtype);
		$stmt->bindParam("eventdata", $userdata->eventdata);
		$stmt->bindParam("user", $userdata->user);
		$stmt->bindParam("timestamp", $timestamp);
		$stmt->execute();
		$db = null;
		echo json_encode($userdata); 
	} catch(PDOException $e) {
		error_log($e->getMessage(), 3, 'addeventlog.log');
		echo '{"error":{"text":'. $e->getMessage() .'}}'; 
	}
}

function updateUser($id) {
	$request = Slim::getInstance()->request();
	$body = $request->getBody();
	$result = json_decode($body);
	$sql = "UPDATE wine SET name=:name, grapes=:grapes, country=:country, region=:region, year=:year, description=:description WHERE id=:id";
	try {
		$db = getConnection();
		$stmt = $db->prepare($sql);  
		$stmt->bindParam("name", $wine->name);
		$stmt->bindParam("grapes", $wine->grapes);
		$stmt->bindParam("country", $wine->country);
		$stmt->bindParam("region", $wine->region);
		$stmt->bindParam("year", $wine->year);
		$stmt->bindParam("description", $wine->description);
		$stmt->bindParam("id", $id);
		$stmt->execute();
		$db = null;
		echo json_encode($result); 
	} catch(PDOException $e) {
		echo '{"error":{"text":'. $e->getMessage() .'}}'; 
	}
}

function deleteUser($id) {
	$sql = "DELETE FROM wine WHERE id=:id";
	try {
		$db = getConnection();
		$stmt = $db->prepare($sql);  
		$stmt->bindParam("id", $id);
		$stmt->execute();
		$db = null;
	} catch(PDOException $e) {
		echo '{"error":{"text":'. $e->getMessage() .'}}'; 
	}
}

function findByName($query) {
	$sql = "SELECT * FROM users WHERE UPPER(username) LIKE :query ORDER BY username";
	try {
		$db = getConnection();
		$stmt = $db->prepare($sql);
		$query = "%".$query."%";  
		$stmt->bindParam("query", $query);
		$stmt->execute();
		$results = $stmt->fetchAll(PDO::FETCH_OBJ);
		$db = null;
		echo '{"results": ' . json_encode($results) . '}';
	} catch(PDOException $e) {
		echo '{"error":{"text":'. $e->getMessage() .'}}'; 
	}
}

function findEventsByID($id, $event) {
	$sql = "SELECT * FROM `X" . $id . "` WHERE eventtype = '" . $event . "';";
			try {
		$db = getConnection();
		$stmt = $db->prepare($sql);
		$stmt->execute();
		$results = $stmt->fetchAll(PDO::FETCH_OBJ);
		$db = null;
		echo '{"results": ' . json_encode($results) . '}'; }
	 catch(PDOException $e) {
		echo '{"error":{"text":'. $e->getMessage() .'}}'; 
	}
}

function findByTitle($query) {
	$query = "%".$query."%";
	$sql = "SHOW TABLES LIKE '" . $query . "'";
	try {
		$db = getConnection();
		$stmt = $db->prepare($sql);
		
		$stmt->execute();
		$results = $stmt->fetchAll(PDO::FETCH_OBJ);
		$db = null;
		echo '{"results": ' . json_encode($results) . '}';
	} catch(PDOException $e) {
		echo '{"error":{"text":'. $e->getMessage() .'}}'; 
	}
}

function findByUser($user) {
	$query = "%X%";	
	$sql = "SHOW TABLES LIKE '" . $query . "';";
	try {
		$db = getConnection();
		$stmt = $db->prepare($sql);
		$stmt->execute();
		$results = $stmt->fetchAll(PDO::FETCH_OBJ);
		$db = null;
		echo '{"results": ' . json_encode($results) . '}';
	} catch(PDOException $e) {
		echo '{"error":{"text":'. $e->getMessage() .'}}'; 
	}
}
	
function getConnection() {
	$dbhost="localhost";
	$dbuser="root";
	$dbpass="";
	$dbname="traxxman";
	$dbh = new PDO("mysql:host=$dbhost;dbname=$dbname", $dbuser, $dbpass);	
	$dbh->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
	return $dbh;
}

?>